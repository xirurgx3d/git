/// Add Gap between the boxes
///
/// @author Sascha Fuchs
///
/// @group core - cssgrid
///
/// @param   {list}    $boxes - List with box sizes
/// @param   {string}  $gap - Optional column gap
@function box-gap($boxes, $gap) {
  $box: ();

  @for $i from 1 through length($boxes) {
    $box: append($box, nth($boxes, $i), space);

    // Adding Gap Between
    @if $gap > 0 {
      // Not last Loop
      @if $i != length($boxes) {
        $box: append($box, $gap, space);
      }
    }
  }

  @return $box;
}

/// To build Grid Template Columns with optional gap
///
/// @author Sascha Fuchs
///
/// @group core - cssgrid
///
/// @param   {string}  $gap - Optional column gap
/// @param   {list}    $columns - Columns sizes
///
/// @require {function} box-gap
///
/// @example scss - scss
///   .test {
///     @include grid-columns(10px 250px 1fr 50px 100px);
///   }
@mixin grid-columns($gap, $columns) {
  grid-template-columns: $columns;
  @if $gap > 0 {
    grid-column-gap: $gap;
  }
  -ms-grid-columns: box-gap($columns, $gap);
}

/// To build Grid Template Rows with optional gap
///
/// @author Sascha Fuchs
///
/// @group core - cssgrid
///
/// @param   {string}  $gap - Optional row gap
/// @param   {list}    $rows - Rows sizes
///
/// @require {function} box-gap
///
/// @example scss - scss
///   .test {
///     @include grid-rows(10px 1fr);
///   }
@mixin grid-rows($gap, $rows) {
  grid-template-rows: $rows;
  @if $gap > 0 {
    grid-row-gap: $gap;
  }

  -ms-grid-rows: box-gap($rows, $gap);
}

/// Generates IE10/11 grid placement to simulate grid-auto-flow.
///
/// @author Katherine Senzee
///
/// @param {map}    $data - Information needed to tell IE exactly where to place everything.
/// @param {string} $data.autoflow - value for "grid-auto-flow". Either 'column' or 'row'.
/// @param {number} $data.columns - number of columns in the grid
/// @param {number} $data.rows - number of rows in the grid
/// @param {string} $data.gap - Where to allow for gaps. Should be 'column', 'row', or 'both'.
///
/// @example scss -
///   .quotes {
///     @include grid-autoflow(autoflow: column, columns: 3, rows: 6, gap: both);
///   }
@mixin grid-autoflow($data) {
  $autoflow: map-get($data, autoflow);
  $columns: map-get($data, columns);
  $rows: map-get($data, rows);

  $columnGap: false;
  $rowGap: false;

  @if (map-get($data, 'gap') == 'column') {
    $columnGap: true;
    $rowGap: false;
  }
  @else if (map-get($data, gap) == 'row') {
    $columnGap: false;
    $rowGap: true;
  }
  @else if (map-get($data, gap) == 'both') {
    $columnGap: true;
    $rowGap: true;
  }
  @else if (map-get($data, gap) == 'neither') {
    $columnGap: false;
    $rowGap: false;
  }


  @if ($columnGap) {
    $columns: $columns * 2 - 1;
  }
  @if ($rowGap) {
    $rows: $rows * 2 - 1;
  }

  grid-auto-flow: $autoflow;
  $column: 1;
  $row: 1;
  $counter: 1;

  @if ($autoflow == 'column') {
    @for $i from 1 through $columns {
      @for $j from 1 through $rows {
        // This element can be filled iff we are not in a row gap or a column gap.
        @if ($i % 2 == 0 and $columnGap) {
          // This is a column gap. Don't place the next element.
        }
        @else if ($j % 2 == 0 and $rowGap) {
          // This is a row gap. Don't place the next element.
        }
        @else {
          // Place the next element in column $i and row $j.
          :nth-child(#{$counter}) {
            -ms-grid-column: $i;
            -ms-grid-row: $j;
          }
          $counter: $counter + 1;
        }
      }
    }
  }
  @else if ($autoflow == 'row') {
    @for $i from 1 through $rows {
      @for $j from 1 through $columns {
        // This element can be filled iff we are not in a row gap or a column gap.
        @if ($i % 2 == 0 and $rowGap) {
          // This is a row gap. Don't place the next element.
        }
        @else if ($j % 2 == 0 and $columnGap) {
          // This is a column gap. Don't place the next element.
        }
        @else {
          // Place the next element in row $i and column $j.
          :nth-child(#{$counter}) {
            -ms-grid-column: $j;
            -ms-grid-row: $i;
          }
          $counter: $counter + 1;
        }
      }
    }
  }

}
